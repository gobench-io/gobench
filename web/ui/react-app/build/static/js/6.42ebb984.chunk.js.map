{"version":3,"sources":["views/App/Group.js"],"names":["GraphComponent","lazy","Group","group","timestamp","useState","graphs","fetchGraphs","isCollapse","toggleCollapse","useEffect","id","GoBenchAPI","getGraphs","then","res","className","onClick","title","get","length","map","graph","index","key","fallback"],"mappings":"2JAKMA,EAAiBC,gBAAK,kBAAM,gCAuCnBC,UAnCf,YAAsC,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UAAa,EACLC,mBAAS,IADJ,mBAC5BC,EAD4B,KACpBC,EADoB,OAEEF,oBAAS,GAFX,mBAE5BG,EAF4B,KAEhBC,EAFgB,KAWnC,OAPAC,qBAAU,WACJP,GAASA,EAAMQ,KAAOH,GACxBI,IAAWC,UAAUV,EAAMQ,IAAIG,MAAK,SAAAC,GAClC,OAAOR,EAAYQ,QAGtB,CAACZ,EAAOK,IAET,yBAAKQ,UAAU,SACb,yBAAKA,UAAU,yBACVC,QAAS,kBAAMR,GAAgBD,KAClC,wBAAIU,MAAOZ,EAAOK,IAAM,GAAIK,UAAU,eAAeG,cAAIhB,EAAO,OAAQ,KACxE,0BAAMa,UAAU,mBACbR,EAAa,SAAW,aAG7B,yBAAKQ,UAAS,uBAAkBR,EAAa,WAAa,KAEtDF,EAAOc,OAAS,EACdd,EAAOe,KAAI,SAACC,EAAOC,GACjB,OAAQf,GAAc,kBAAC,WAAD,CAAUgB,IAAKF,EAAMX,IAAMY,EAAOE,SA1BhD,gDA2BN,kBAACzB,EAAD,CAAgBsB,MAAOA,EAAOlB,UAAWA,QAG3C,uBAAGY,UAAU,eAAb","file":"static/js/6.42ebb984.chunk.js","sourcesContent":["import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { get } from 'lodash';\nimport './App.css';\nimport GoBenchAPI from '../../api/gobench';\n\nconst GraphComponent = lazy(() => import('./Graph'));\n\nconst loading = () => <p>Loading group...</p>;\n\nfunction Group({ group, timestamp }) {\n  const [graphs, fetchGraphs] = useState([]);\n  const [isCollapse, toggleCollapse] = useState(true);\n\n  useEffect(() => {\n    if (group && group.id && !isCollapse) {\n      GoBenchAPI.getGraphs(group.id).then(res => {\n        return fetchGraphs(res);\n      })\n    }\n  }, [group, isCollapse]);\n  return (\n    <div className=\"group\">\n      <div className=\"group-header clickable\"\n           onClick={() => toggleCollapse(!isCollapse)}>\n        <h3 title={graphs.id || ''} className=\"group-title\">{get(group, 'name', '')}</h3>\n        <span className=\"collapse-button\">\n          {isCollapse ? 'Expand' : 'Collapse'}\n        </span>\n      </div>\n      <div className={`group-graphs ${isCollapse ? 'collapse' : ''}`}>\n        {\n          graphs.length > 0 ?\n            graphs.map((graph, index) => {\n              return !isCollapse && <Suspense key={graph.id || index} fallback={loading()}>\n                <GraphComponent graph={graph} timestamp={timestamp}/>\n              </Suspense>\n            })\n            : <p className=\"text-center\">Cannot load graphs.</p>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Group;\n"],"sourceRoot":""}