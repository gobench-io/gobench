{"version":3,"sources":["pages/application/create.js"],"names":["Item","Form","withRouter","connect","application","dispatch","loading","clone","useForm","form","history","useHistory","useState","name","setName","scenario","setSceraio","gomod","setGomod","gosum","setGosum","useEffect","getFieldValue","setFieldsValue","onChange","field","value","className","layout","hideRequiredMark","onFinish","values","type","payload","onFinishFailed","errorInfo","console","log","size","htmlType","style","marginLeft","onClick","push","rules","required","message","e","target","placeholder","onValueChange","c","highlight","code","languages","go","padding","tabSize","insertSpaces","autoFocus","fontFamily","fontSize"],"mappings":"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","file":"static/js/11.6d18fc02.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Button, Input } from 'antd'\nimport { connect } from 'react-redux'\nimport Editor from 'react-simple-code-editor'\nimport { highlight, languages } from 'prismjs/components/prism-core'\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-go'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport 'css/editor.css'\n\nconst { Item } = Form\n\nconst mapStateToProps = ({ application, dispatch }) => {\n  const { loading, clone } = application\n  return {\n    loading,\n    clone,\n    dispatch\n  }\n}\nconst DefaultPage = ({ loading, clone, dispatch }) => {\n  const [form] = Form.useForm()\n  const history = useHistory()\n  const [name, setName] = useState('')\n  const [scenario, setSceraio] = useState('')\n  const [gomod, setGomod] = useState('')\n  const [gosum, setGosum] = useState('')\n\n  useEffect(() => {\n    // init data if clone\n    if (!form.getFieldValue('name') && clone) {\n      form.setFieldsValue({\n        ...clone\n      })\n      setName(clone.name)\n      setSceraio(clone.scenario)\n      setGomod(clone.gomod)\n      setGosum(clone.gosum)\n    }\n  })\n  const onFinish = values => {\n    if (!values.gomod) {\n      values.gomod = ''\n    }\n    if (!values.gosum) {\n      values.gosum = ''\n    }\n    dispatch({\n      type: 'application/CREATE',\n      payload: values\n    })\n  }\n  const onChange = (field, value) => {\n    form.setFieldsValue({ [field]: value })\n    switch (field) {\n      case 'name':\n        setName(value)\n        break\n      case 'scenario':\n        setSceraio(value)\n        break\n      case 'gomod':\n        setGomod(value)\n        break\n      case 'gosum':\n        setGosum(value)\n        break\n      default:\n        break\n    }\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n  return (\n    <>\n      <div className='container'>\n        <div className='card'>\n          <Form\n            layout='vertical'\n            hideRequiredMark\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            className='mb-4'\n            form={form}\n          >\n            <div className='card-header row'>\n              <div className='col-md-6'>\n                <div className='cui__utils__heading mb-0'>\n                  <h3>Create new Application</h3>\n                </div>\n                <div className='text-muted'>Tips: You can clone another application and run again!</div>\n              </div>\n              <div className='col-md-6'>\n                <div className='text-right'>\n                  <Button\n                    type='primary'\n                    size='large'\n                    htmlType='submit'\n                    loading={loading}\n                  >\n                    <strong>Create</strong>\n                  </Button>\n\n                  <Button\n                    size='large'\n                    style={{ marginLeft: 5 }}\n                    onClick={() => history.push('/applications')}\n                  >\n                    <strong>Cancel</strong>\n                  </Button>\n                </div>\n              </div>\n            </div>\n            <div className='card-body'>\n\n              <Item\n                name='name'\n                rules={[{ required: true, message: 'Application name is required' }]}\n              >\n                <h4 className='mb-2'>\n                  <strong>Application Name</strong>\n                </h4>\n                <Input value={name} onChange={e => onChange('name', e.target.value)} placeholder='Please input the application name.' />\n              </Item>\n              <Item\n                name='scenario'\n                rules={[{ required: true, message: 'Scenario is required' }]}\n              >\n                <h4 className='mb-2'>\n                  <strong>Scenario</strong>\n                </h4>\n                <div className='editor-container'>\n                  <Editor\n                    value={scenario}\n                    onValueChange={c => onChange('scenario', c)}\n                    highlight={code => highlight((code || ''), languages.go, 'go')}\n                    padding={16}\n                    tabSize={4}\n                    insertSpaces\n                    className='editor'\n                    autoFocus\n                    style={{\n                      fontFamily: '\"Arial\", \"Open Sans\", monospace',\n                      fontSize: 14\n                    }}\n                  />\n                </div>\n              </Item>\n              <Item\n                name='gomod'\n                rules={[{ required: false }]}\n              >\n                <h4 className='mb-2'>\n                  <strong>gomod</strong>\n                </h4>\n                <div className='editor-container'>\n                  <Editor\n                    value={gomod}\n                    onValueChange={c => onChange('gomod', c)}\n                    highlight={code => highlight((code || ''), languages.go, 'go')}\n                    padding={16}\n                    tabSize={4}\n                    insertSpaces\n                    className='editor'\n                    style={{\n                      fontFamily: '\"Arial\", \"Open Sans\", monospace',\n                      fontSize: 14\n                    }}\n                  />\n                </div>\n              </Item>\n              <Item\n                name='gosum'\n                rules={[{ required: false }]}\n              >\n                <h4 className='mb-2'>\n                  <strong>gosum</strong>\n                </h4>\n                <div className='editor-container'>\n                  <Editor\n                    value={gosum}\n                    onValueChange={c => onChange('gosum', c)}\n                    highlight={code => highlight((code || ''), languages.go, 'go')}\n                    padding={16}\n                    tabSize={4}\n                    insertSpaces\n                    className='editor'\n                    style={{\n                      fontFamily: '\"Arial\", \"Open Sans\", monospace',\n                      fontSize: 14\n                    }}\n                  />\n                </div>\n              </Item>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(DefaultPage))\n"],"sourceRoot":""}