{"version":3,"sources":["redux/settings/actions.js","utils/chart.js","components/cleanui/layout/Footer/style.module.scss","components/cleanui/layout/TopBar/UserMenu/style.module.scss","redux/settings/sagas.js","components/cleanui/layout/TopBar/style.module.scss","polifill.js","redux/user/actions.js","redux/user/reducers.js","redux/menu/actions.js","redux/menu/reducers.js","redux/settings/reducers.js","redux/application/actions.js","redux/application/reducers.js","services/axios/index.js","services/jwt/index.js","redux/user/sagas.js","services/menu/index.js","redux/menu/sagas.js","services/index.js","services/application/index.js","redux/application/sagas.js","redux/sagas.js","localization.js","locales/en-US.js","locales/fr-FR.js","locales/ru-RU.js","locales/zh-CN.js","layouts/Public/index.js","components/cleanui/layout/Footer/index.js","layouts/Auth/index.js","components/cleanui/layout/TopBar/UserMenu/index.js","components/cleanui/layout/TopBar/index.js","components/cleanui/layout/Breadcrumbs/index.js","layouts/index.js","layouts/Main/index.js","router.js","serviceWorker.js","services/axios/fakeApi/mock.js","services/axios/fakeApi/auth/index.js","services/axios/fakeApi/index.js","index.js","redux/reducers.js","constant/index.js","layouts/Auth/style.module.scss","components/cleanui/layout/Breadcrumbs/style.module.scss"],"names":["actions","SET_STATE","CHANGE_SETTING","SET_PRIMARY_COLOR","SET_THEME","getValue","metric","valueType","toFixed","DEFAULT_VALUE","getChartData","type","data","isArray","map","m","x","time","y","values","Date","getTime","hDataKeys","makeHistogramSeriesData","console","log","hData","reduce","acc","key","forEach","d","name","getDataByType","METRIC_TYPE","HISTOGRAM","fixSecond","timestamp","Math","round","makeChartDataByTimeRange","rawData","timeRange","timeRangeMiliseconds","seri","seriData","get","length","seriDataLength","firstData","lastData","lastDataTime","firstDataTime","dataTime","extraTime","s","filter","module","exports","SETUP","rootSaga","payload","setting","value","store","set","put","color","addStyles","styleElement","document","querySelector","remove","body","styleEl","createElement","css","createTextNode","setAttribute","appendChild","reduxStore","dispatch","theme","nextTheme","changeSettings","search","query","qs","parse","ignoreQueryPrefix","Object","keys","history","location","listen","params","primaryColor","initTheme","isMobileView","load","currentState","global","window","innerWidth","prevState","isMenuToggled","shouldToggle","addEventListener","all","takeEvery","String","prototype","format","args","arguments","this","replace","match","number","LOGIN","REGISTER","LOAD_CURRENT_ACCOUNT","LOGOUT","initialState","id","role","email","avatar","authorized","process","loading","userReducer","state","action","GET_DATA","menuData","storedSettings","settings","item","STORED_SETTINGS","authProvider","logo","locale","isSidebarOpen","isSupportChatOpen","isMobileMenuOpen","isMenuCollapsed","menuLayoutType","routerAnimation","menuColor","authPagesColor","leftMenuWidth","isMenuUnfixed","isMenuShadow","isTopbarFixed","isGrayTopbar","isContentMaxWidth","isAppMaxWidth","isGrayBackground","isCardShadow","isSquaredBorders","isBorderless","settingsReducer","SET_GRAPH_STATE","SET_GRAPH_METRIC_STATE","SET_METRIC_STATE","SET_METRIC_DATA_REALTIME","SET_GRAPH_METRIC_DATA","SET_TAG_STATE","LIST","DETAIL","CREATE","UPDATE","DELETE","CANCEL","CLONE","GROUPS","GRAPHS","GRAPH_METRICS","COUNTER","HISTOGRAMS","GAUGES","METRICS","METRIC_INTERVAL","METRIC_DATA","GRAPH_METRIC_DATA","METRIC_DATA_POLLING","LOG","SYSLOG","TAGS","TAG_REMOVE","TAG_ADD","list","detail","total","groups","graphs","graphMetrics","counters","histograms","gauges","metrics","metricDatas","metricDataRealtime","tags","some","a","oldGraph","every","graphId","apiClient","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","accessToken","Authorization","response","undefined","error","statusText","status","push","notification","warning","message","username","password","post","then","catch","err","mapAuthProviders","jwt","login","register","currentAccount","logout","select","autProviderName","call","success","description","getMenuData","category","title","API","init","api","listApi","limit","offset","order","isAsc","keyword","count","res","url","detailApi","createApi","updateApi","update","destroyApi","delete","get_tag","add_tag","remove_tag","cancel","destroy","getTags","addTag","removeTag","tagId","getGroups","getGraphs","getGraphMetrics","getCounters","from","end","getHistograms","getGauges","getMetrics","getMetricData","fromTime","toTime","GAUGE","getOfflineMetricData","isRealtime","now","metricsData","mData","lastTimestamp","chartData","maxBy","Promise","rs","getMetricDataPolling","oldData","mtr","oldMetricData","find","o","dataByType","oldMetricChartData","newData","orderBy","logs","sorter","field","scenario","gomod","gosum","btoa","unescape","encodeURIComponent","clone","application","redirect","groupId","isLoading","user","menu","locales","localeAntd","messages","administrator","connect","children","currentLocale","withRouter","Footer","className","style","footer","footerInner","width","src","href","target","rel","Content","classNames","container","cui__layout__squaredBorders","cui__layout__cardsShadow","cui__layout__borderless","white","gray","backgroundImage","topbar","topbarGray","logoContainer","alt","containerInner","useState","setCount","selectable","Item","Divider","onClick","e","preventDefault","overlay","trigger","onVisibleChange","styles","dropdown","shape","size","icon","UserOutlined","TopBar","to","marginRight","opacity","UserMenu","props","breadcrumbs","setBreadcrumbs","pathname","useEffect","getBreadcrumbs","getPath","parents","items","result","entry","concat","nested","activeMenuItem","path","reverse","index","arrow","current","Layouts","public","PublicLayout","auth","AuthLayout","main","cui__layout__grayBackground","cui__layout__contentMaxWidth","cui__layout__appMaxWidth","Header","cui__layout__fixedHeader","cui__layout__headerGray","height","position","previousPath","currentPath","scrollTo","NProgress","start","setTimeout","done","getLayout","test","Container","isUserAuthorized","isUserLoading","isAuthLayout","Helmet","titleTemplate","routes","Component","lazy","exact","render","SwitchTransition","CSSTransition","appear","fallback","Boolean","hostname","mock","MockAdapter","delayResponse","users","jwtConfig","secret","expiresIn","onPost","reply","JSON","userData","assign","sign","onGet","AccessToken","verify","onAny","passThrough","createHashHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","router","connectRouter","applyMiddleware","run","sagas","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","counter","gauge","INTERVAL","TIME_RANGE"],"mappings":"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","file":"static/js/main.548cd0f2.chunk.js","sourcesContent":["const actions = {\n  SET_STATE: 'settings/SET_STATE',\n  CHANGE_SETTING: 'settings/CHANGE_SETTING',\n  SET_PRIMARY_COLOR: 'settings/SET_PRIMARY_COLOR',\n  SET_THEME: 'settings/SET_THEME'\n}\n\nexport default actions\n","import { get, isArray } from 'lodash'\nimport { values, METRIC_TYPE, DEFAULT_VALUE } from 'constant'\n/***\n * get value of metric by type\n * @param metric\n * @param valueType\n * @returns {*|number}\n */\nexport const getValue = (metric, valueType) => (metric[valueType]).toFixed(0) || DEFAULT_VALUE\n\n/***\n * Get chart data depend on metric type\n * @param type\n * @param data\n * @returns {*}\n */\nexport const getChartData = (type, data) => isArray(data) ? data.map(m => ({\n  x: m.time,\n  y: getValue(m, values[type])\n})) : [{\n  x: new Date(data.time).getTime(),\n  y: getValue(data, values[type])\n}]\n\n/***\n * Make chartData by metric type\n * @param data\n * @returns {({data: ([]|*[]), name: string}|{data: ([]|*[]), name: string}|{data: ([]|*[]), name: string}|{data: ([]|*[]), name: string}|{data: ([]|*[]), name: string})[]|{data: *, name: *}}\n */\nexport const hDataKeys = ['min', 'mean', 'p99', 'max']\nexport const makeHistogramSeriesData = (data) => {\n  console.log('makeHis', data)\n  let hData = hDataKeys.reduce((acc, key) => ({\n    ...acc,\n    [key]: []\n  }), {})\n  data.forEach(d => {\n    hData = hDataKeys.reduce((acc, key) => ({\n      ...acc,\n      [key]: [...hData[key], { x: d.time, y: (d[key]).toFixed(0) || 0 }]\n    }), {})\n  })\n  return hDataKeys.map(key => ({ name: key, data: hData[key] }))\n}\n\nexport const getDataByType = (data, type) => {\n  return (type === METRIC_TYPE.HISTOGRAM ? data : getChartData(type, data))\n}\n/**\n * make timestamp without to second\n * @param timestamp\n * @returns {number}\n */\nconst fixSecond = (timestamp) => Math.round(timestamp / 1000) * 1000\n\n/***\n * Make chart data by time range\n * @param rawData\n * @param timeRange\n * @returns {*}\n */\nexport const makeChartDataByTimeRange = (rawData = [], timeRange = 3600) => {\n  const timeRangeMiliseconds = timeRange * 1000\n  return rawData.map((seri) => {\n    const seriData = get(seri, 'data', [])\n    if (seriData.length === 0) {\n      return []\n    }\n    const seriDataLength = seriData.length || 0\n    const firstData = seriData[0]\n    const lastData = seriData[seriDataLength - 1]\n    const lastDataTime = get(lastData, 'x', 0)\n    const firstDataTime = get(firstData, 'x', 0)\n    const dataTime = fixSecond(lastDataTime - firstDataTime)\n\n    if (dataTime < timeRangeMiliseconds) {\n      const extraTime = timeRangeMiliseconds - dataTime\n      return {\n        ...seri,\n        data: [...seriData.map(s => ({\n          x: Math.round(s.x / 1000) * 1000, y: s.y\n        })), { x: lastDataTime + extraTime, y: DEFAULT_VALUE }]\n      }\n    }\n    return {\n      ...seri,\n      data: seriData.filter(d => d.x >= (fixSecond(lastDataTime) - timeRangeMiliseconds))\n    }\n  })\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"style_footer__2hym0\",\"footerInner\":\"style_footerInner__1DuHA\",\"logo\":\"style_logo__2d2sM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"style_dropdown__15ICG\",\"avatar\":\"style_avatar__1Hoh8\"};","import { all, takeEvery, put } from 'redux-saga/effects'\nimport store from 'store'\nimport qs from 'qs'\nimport { history, store as reduxStore } from 'index'\nimport actions from './actions'\n\nexport function * CHANGE_SETTING ({ payload: { setting, value } }) {\n  yield store.set(`app.settings.${setting}`, value)\n  yield put({\n    type: 'settings/SET_STATE',\n    payload: {\n      [setting]: value\n    }\n  })\n}\n\nexport function * SET_PRIMARY_COLOR ({ payload: { color } }) {\n  const addStyles = () => {\n    const styleElement = document.querySelector('#primaryColor')\n    if (styleElement) {\n      styleElement.remove()\n    }\n    const body = document.querySelector('body')\n    const styleEl = document.createElement('style')\n    const css = document.createTextNode(`:root { --kit-color-primary: ${color};}`)\n    styleEl.setAttribute('id', 'primaryColor')\n    styleEl.appendChild(css)\n    body.appendChild(styleEl)\n  }\n\n  yield addStyles()\n  yield reduxStore.dispatch({\n    type: 'settings/CHANGE_SETTING',\n    payload: {\n      setting: 'primaryColor',\n      value: color\n    }\n  })\n}\n\nexport function * SET_THEME ({ payload: { theme } }) {\n  const nextTheme = theme === 'dark' ? 'dark' : 'default'\n  yield document.querySelector('html').setAttribute('data-kit-theme', nextTheme)\n  yield reduxStore.dispatch({\n    type: 'settings/CHANGE_SETTING',\n    payload: {\n      setting: 'theme',\n      value: nextTheme\n    }\n  })\n}\n\nexport function * SETUP () {\n  // load settings from url on app load\n  const changeSettings = search => {\n    const query = qs.parse(search, { ignoreQueryPrefix: true })\n    Object.keys(query).forEach(key => {\n      let value\n      switch (query[key]) {\n        case 'false':\n          value = false\n          break\n        case 'true':\n          value = true\n          break\n        default:\n          value = query[key]\n          break\n      }\n      if (key === 'theme') {\n        reduxStore.dispatch({\n          type: 'settings/SET_THEME',\n          payload: {\n            theme: value\n          }\n        })\n        return\n      }\n      reduxStore.dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: key,\n          value\n        }\n      })\n    })\n  }\n  yield changeSettings(history.location.search)\n  yield history.listen(params => {\n    const { search } = params\n    changeSettings(search)\n  })\n\n  // set primary color on app load\n  const primaryColor = () => {\n    const color = store.get('app.settings.primaryColor')\n    if (color) {\n      reduxStore.dispatch({\n        type: 'settings/SET_PRIMARY_COLOR',\n        payload: {\n          color\n        }\n      })\n    }\n  }\n  yield primaryColor()\n\n  // init theme on app load\n  const initTheme = () => {\n    const { search } = history.location\n    const query = qs.parse(search, { ignoreQueryPrefix: true })\n    const theme = query.theme || store.get('app.settings.theme') || 'default'\n    reduxStore.dispatch({\n      type: 'settings/SET_THEME',\n      payload: {\n        theme\n      }\n    })\n  }\n  yield initTheme()\n\n  // detect isMobileView setting on app load and window resize\n  const isMobileView = (load = false) => {\n    const currentState = global.window.innerWidth < 768\n    const prevState = store.get('app.settings.isMobileView')\n    if (currentState !== prevState || load) {\n      reduxStore.dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isMobileView',\n          value: currentState\n        }\n      })\n    }\n  }\n\n  // detect viewport width on app load and window resize\n  const isMenuToggled = () => {\n    const shouldToggle = global.window.innerWidth < 1024\n    const prevState = store.get('app.settings.isMenuCollapsed')\n    if (shouldToggle || prevState) {\n      reduxStore.dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isMenuCollapsed',\n          value: true\n        }\n      })\n    }\n  }\n\n  yield isMobileView(true)\n  yield isMenuToggled()\n  yield window.addEventListener('resize', () => {\n    isMobileView()\n    isMenuToggled()\n  })\n}\n\nexport default function * rootSaga () {\n  yield all([\n    takeEvery(actions.CHANGE_SETTING, CHANGE_SETTING),\n    takeEvery(actions.SET_PRIMARY_COLOR, SET_PRIMARY_COLOR),\n    takeEvery(actions.SET_THEME, SET_THEME),\n    SETUP() // run once on app load to init listeners\n  ])\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbar\":\"style_topbar__21Vtj\"};","// First, checks if it isn't implemented yet.\nif (!String.prototype.format) {\n  String.prototype.format = function () {\n    var args = arguments\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n      return typeof args[number] !== 'undefined'\n        ? args[number]\n        : match\n    })\n  }\n}\n","const actions = {\n  SET_STATE: 'user/SET_STATE',\n  LOGIN: 'user/LOGIN',\n  REGISTER: 'user/REGISTER',\n  LOAD_CURRENT_ACCOUNT: 'user/LOAD_CURRENT_ACCOUNT',\n  LOGOUT: 'user/LOGOUT'\n}\n\nexport default actions\n","import actions from './actions'\n\nconst initialState = {\n  id: '',\n  name: '',\n  role: '',\n  email: '',\n  avatar: '',\n  authorized: process.env.REACT_APP_AUTHENTICATED || false, // false is default value\n  loading: false\n}\n\nexport default function userReducer (state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    default:\n      return state\n  }\n}\n","const actions = {\n  SET_STATE: 'menu/SET_STATE',\n  GET_DATA: 'menu/GET_DATA'\n}\n\nexport default actions\n","import actions from './actions'\n\nconst initialState = {\n  menuData: []\n}\n\nexport default function userReducer (state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    default:\n      return state\n  }\n}\n","import store from 'store'\nimport actions from './actions'\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {}\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`)\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key]\n  })\n  return settings\n}\n\nconst initialState = {\n  ...STORED_SETTINGS({\n    authProvider: 'jwt', //  jwt\n    logo: 'Gobench',\n    locale: 'en-US',\n    isSidebarOpen: false,\n    isSupportChatOpen: false,\n    isMobileView: false,\n    isMobileMenuOpen: false,\n    isMenuCollapsed: false,\n    menuLayoutType: 'left', // left, top, nomenu\n    routerAnimation: 'slide-fadein-up', // none, slide-fadein-up, slide-fadein-right, fadein, zoom-fadein\n    menuColor: 'white', // white, dark, gray\n    theme: 'default', // default, dark\n    authPagesColor: 'image', // white, gray, image\n    primaryColor: '#4b7cf3',\n    leftMenuWidth: 258,\n    isMenuUnfixed: false,\n    isMenuShadow: false,\n    isTopbarFixed: true,\n    isGrayTopbar: false,\n    isContentMaxWidth: false,\n    isAppMaxWidth: false,\n    isGrayBackground: false,\n    isCardShadow: true,\n    isSquaredBorders: false,\n    isBorderless: false\n  })\n}\n\nexport default function settingsReducer (state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    default:\n      return state\n  }\n}\n","// define some action\nconst actions = {\n  SET_STATE: 'application/SET_STATE',\n  SET_GRAPH_STATE: 'application/SET_GRAPH_STATE',\n  SET_GRAPH_METRIC_STATE: 'application/SET_GRAPH_METRIC_STATE',\n  SET_METRIC_STATE: 'application/SET_METRIC_STATE',\n  SET_METRIC_DATA_REALTIME: 'application/SET_METRIC_DATA_REALTIME',\n  SET_GRAPH_METRIC_DATA: 'application/SET_GRAPH_METRIC_DATA',\n  SET_TAG_STATE: 'application/SET_TAG_STATE',\n  LIST: 'application/LIST',\n  DETAIL: 'application/DETAIL',\n  CREATE: 'application/CREATE',\n  UPDATE: 'application/UPDATE',\n  DELETE: 'application/DELETE',\n  // other\n  CANCEL: 'application/CANCEL',\n  CLONE: 'application/CLONE',\n  GROUPS: 'application/GROUPS',\n  GRAPHS: 'application/GRAPHS',\n  GRAPH_METRICS: 'application/GRAPH_METRICS',\n  COUNTER: 'application/COUNTER',\n  HISTOGRAMS: 'application/HISTOGRAMS',\n  GAUGES: 'application/GAUGES',\n  METRICS: 'application/METRICS',\n  // complex\n  METRIC_INTERVAL: 'application/METRIC_INTERVAL',\n  METRIC_DATA: 'application/METRIC_DATA',\n  GRAPH_METRIC_DATA: 'application/GRAPH_METRIC_DATA',\n  METRIC_DATA_POLLING: 'application/METRIC_DATA_POLLING',\n  LOG: 'application/LOG',\n  SYSLOG: 'application/SYSLOG',\n  TAGS: 'application/TAGS',\n  TAG_REMOVE: 'application/TAG_REMOVE',\n  TAG_ADD: 'application/TAG_ADD'\n}\n\nexport default actions\n","import actions from './actions'\n\nconst initialState = {\n  list: [],\n  detail: {},\n  total: 0,\n  groups: [],\n  graphs: [],\n  graphMetrics: [],\n  counters: [],\n  histograms: [],\n  gauges: [],\n  metrics: [],\n  metricDatas: [],\n  metricDataRealtime: [],\n  tags: [],\n  loading: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    case actions.SET_TAG_STATE:\n      if (state.tags.some(x => x.id === action.payload[0].id)) {\n        return state\n      }\n      return { ...state, tags: [...state.tags, ...action.payload] }\n    case actions.SET_GRAPH_STATE: {\n      if (action.payload.graphs.some(x => state.graphs.some(a => a.id === x.id))) {\n        const oldGraph = state.graphs.filter(x => action.payload.graphs.every(a => a.id !== x.id))\n        return { ...state, graphs: [...oldGraph, ...action.payload.graphs] }\n      }\n      return { ...state, graphs: [...state.graphs, ...action.payload.graphs] }\n    }\n    case actions.SET_GRAPH_METRIC_STATE: {\n      if (state.graphMetrics.some(x => x.graphId === action.payload.graphId)) {\n        return {\n          ...state,\n          graphMetrics: state.graphMetrics.map(x => {\n            if (x.graphId === action.payload.graphId) {\n              return action.payload\n            }\n            return x\n          })\n        }\n      }\n      return { ...state, graphMetrics: [...state.graphMetrics, action.payload] }\n    }\n    case actions.SET_GRAPH_METRIC_DATA: {\n      if (state.metricDatas.some(x => x.graphId === action.payload.graphId)) {\n        return {\n          ...state,\n          metricDatas: state.metricDatas.map(x => {\n            if (x.graphId === action.payload.graphId) {\n              return action.payload\n            }\n            return x\n          })\n        }\n      }\n      return { ...state, metricDatas: [...state.metricDatas, action.payload] }\n    }\n    case actions.SET_METRIC_STATE:\n\n      if (state.graphs.some(x => x.id === action.payload.id)) {\n        return {\n          ...state,\n          graphs: state.graphs.map(x => {\n            if (x.id === action.payload.id) {\n              return { ...x, metrics: action.payload.metrics }\n            }\n            return x\n          })\n        }\n      }\n      return { ...state, graphMetrics: [...state.graphMetrics, action.payload] }\n    case actions.SET_METRIC_DATA_REALTIME: {\n      // return { ...state, metricDataRealtime: [...state.metricDataRealtime, ...action.payload] }\n      let metricDataRealtime\n      if (state.metricDataRealtime.some(x => action.payload.some(a => a.id === x.id))) {\n        metricDataRealtime = state.metricDataRealtime.map(x => {\n          if (x.id === action.payload.id) {\n            return action.payload\n          }\n          return x\n        })\n      } else {\n        metricDataRealtime = [...state.metricDataRealtime, ...action.payload]\n      }\n\n      return { ...state, metricDataRealtime }\n    }\n    default:\n      return state\n  }\n}\n","import axios from 'axios'\nimport store from 'store'\nimport { notification } from 'antd'\nimport { history } from 'index'\n\nconst API_ENDPOINT = process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:8080/api'\nconst apiClient = axios.create({\n  baseURL: API_ENDPOINT,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n})\n\napiClient.interceptors.request.use(request => {\n  const accessToken = store.get('accessToken')\n  if (accessToken) {\n    request.headers.Authorization = `Bearer ${accessToken}`\n    // request.headers.AccessToken = accessToken\n  }\n  return request\n})\n\napiClient.interceptors.response.use(undefined, error => {\n  // Errors handling\n  const { response } = error\n  if (!response) {\n    notification.warning({\n      message: 'request failed!'\n    })\n    return\n  }\n  let { data, statusText, status } = response\n  console.log('res', response)\n  if (status === 401) {\n    history.push('/auth/login')\n  }\n  if (data) {\n    if (typeof data === 'object') {\n      data = statusText\n    }\n    notification.warning({\n      message: data\n    })\n  }\n})\n\nexport default apiClient\n","import apiClient from 'services/axios'\nimport store from 'store'\n\nexport async function login (username, password) {\n  return apiClient\n    .post('/users/login', {\n      username,\n      password\n    })\n    .then(response => {\n      if (response) {\n        const { id } = response.data\n        if (id) {\n          store.set('accessToken', id)\n        }\n        return response.data\n      }\n      return false\n    })\n    .catch(err => console.log(err))\n}\n\nexport async function register (email, password, name) {\n  return apiClient\n    .post('/auth/register', {\n      email,\n      password,\n      name\n    })\n    .then(response => {\n      if (response) {\n        const { accessToken } = response.data\n        if (accessToken) {\n          store.set('accessToken', accessToken)\n        }\n        return response.data\n      }\n      return false\n    })\n    .catch(err => console.log(err))\n}\n\nexport async function currentAccount () {\n  const accessToken = store.get('accessToken')\n  if (!accessToken) {\n    return false\n  }\n  return accessToken\n}\n\nexport async function logout () {\n\n  // .get('/auth/logout')\n  // .then(() => {\n  //   store.remove('accessToken')\n  //   return true\n  // })\n  // .catch(err => console.log(err))\n}\n","import { all, takeEvery, put, call, select } from 'redux-saga/effects'\nimport { notification } from 'antd'\nimport { history } from 'index'\nimport * as jwt from 'services/jwt'\nimport actions from './actions'\n\nconst mapAuthProviders = {\n  jwt: {\n    login: jwt.login,\n    register: jwt.register,\n    currentAccount: jwt.currentAccount,\n    logout: jwt.logout\n  }\n}\n\nexport function * LOGIN ({ payload }) {\n  const { username, password } = payload\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      loading: true\n    }\n  })\n  const { authProvider: autProviderName } = yield select(state => state.settings)\n  const success = yield call(mapAuthProviders[autProviderName].login, username, password)\n  if (success) {\n    yield put({\n      type: 'user/LOAD_CURRENT_ACCOUNT'\n    })\n    yield history.push('/')\n    // notification.success({\n    //   message: 'Logged In',\n    //   description: 'You have successfully logged in!'\n    // })\n  }\n  if (!success) {\n    yield put({\n      type: 'user/SET_STATE',\n      payload: {\n        loading: false\n      }\n    })\n  }\n}\n\nexport function * REGISTER ({ payload }) {\n  const { email, password, name } = payload\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      loading: true\n    }\n  })\n  const { authProvider } = yield select(state => state.settings)\n  const success = yield call(mapAuthProviders[authProvider].register, email, password, name)\n  if (success) {\n    yield put({\n      type: 'user/LOAD_CURRENT_ACCOUNT'\n    })\n    yield history.push('/')\n    notification.success({\n      message: 'Succesful Registered',\n      description: 'You have successfully registered!'\n    })\n  }\n  if (!success) {\n    yield put({\n      type: 'user/SET_STATE',\n      payload: {\n        loading: false\n      }\n    })\n  }\n}\n\nexport function * LOAD_CURRENT_ACCOUNT () {\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      loading: true\n    }\n  })\n  const { authProvider } = yield select(state => state.settings)\n  const response = yield call(mapAuthProviders[authProvider].currentAccount)\n  if (response) {\n    const { id, email, name, avatar, role } = response\n    yield put({\n      type: 'user/SET_STATE',\n      payload: {\n        id,\n        name,\n        email,\n        avatar,\n        role,\n        authorized: true\n      }\n    })\n  }\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      loading: false\n    }\n  })\n}\n\nexport function * LOGOUT () {\n  const { authProvider } = yield select(state => state.settings)\n  yield call(mapAuthProviders[authProvider].logout)\n  yield put({\n    type: 'user/SET_STATE',\n    payload: {\n      id: '',\n      name: '',\n      role: '',\n      email: '',\n      avatar: '',\n      authorized: false,\n      loading: false\n    }\n  })\n}\n\nexport default function * rootSaga () {\n  yield all([\n    takeEvery(actions.LOGIN, LOGIN),\n    takeEvery(actions.REGISTER, REGISTER),\n    takeEvery(actions.LOAD_CURRENT_ACCOUNT, LOAD_CURRENT_ACCOUNT),\n    takeEvery(actions.LOGOUT, LOGOUT),\n    LOAD_CURRENT_ACCOUNT() // run once on app load to check user auth\n  ])\n}\n","export default async function getMenuData () {\n  return [\n    {\n      category: true,\n      title: 'Menu'\n    }\n  ]\n}\n","import { all, put, call } from 'redux-saga/effects'\nimport getMenuData from 'services/menu'\n\nexport function * GET_DATA () {\n  const menuData = yield call(getMenuData)\n  yield put({\n    type: 'menu/SET_STATE',\n    payload: {\n      menuData\n    }\n  })\n}\n\nexport default function * rootSaga () {\n  yield all([\n    GET_DATA() // run once on app load to fetch menu data\n  ])\n}\n","import apiClient from 'services/axios'\nlet API\nexport const init = (api) => {\n  API = api\n}\nexport const listApi = async (limit, offset, order, isAsc, keyword) => {\n  if (typeof keyword !== 'string') {\n    keyword = ''\n  }\n  const res = await apiClient.get(`${API.count}?keyword=${keyword}`)\n  if (!res) {\n    return\n  }\n  const { count } = res.data\n  const url = `${API.list}?limit=${limit}&offset=${offset}&order=${order}&isAsc=${isAsc}&keyword=${keyword}`\n  const response = await apiClient.get(url)\n  if (response) {\n    return {\n      total: count,\n      list: response.data\n    }\n  }\n}\nexport const detailApi = async (id) => {\n  const response = await apiClient.get(API.detail.format(id))\n  if (response) {\n    return response.data\n  }\n}\nexport const createApi = async (data) => {\n  const response = await apiClient.post(API.create, data)\n  if (response) {\n    return response.data\n  }\n}\nexport const updateApi = async (id, data) => {\n  const response = await apiClient.put(API.update.format(id), data)\n  if (response) {\n    return response.data\n  }\n}\nexport const destroyApi = async (id) => {\n  await apiClient.delete(API.delete.format(id))\n  return {}\n}\n","import apiClient from 'services/axios'\nimport { init, listApi, detailApi, createApi, updateApi, destroyApi } from '../index'\nimport { METRIC_TYPE } from 'constant'\nimport { get, maxBy, orderBy } from 'lodash'\nimport { getChartData, getDataByType } from 'utils/chart'\nconst API = {\n  count: '/applications/count',\n  list: '/applications',\n  detail: '/applications/{0}',\n  create: '/applications',\n  update: '/applications/{0}',\n  delete: '/applications/{0}',\n  log: '/applications/{0}/logs/{1}',\n  get_tag: '/applications/{0}/tags',\n  add_tag: '/applications/{0}/tags',\n  remove_tag: '/applications/{0}/tags/{1}',\n  // other apis\n  cancel: '/applications/{0}/cancel',\n  groups: '/applications/{0}/groups',\n  graphs: '/groups/{0}/graphs',\n  graphMetrics: '/graphs/{0}/metrics',\n  counters: '/metrics/{0}/counters',\n  histograms: '/metrics/{0}/histograms',\n  gauges: '/metrics/{0}/gauges',\n  metrics: '/metrics/{0}'\n\n}\nexport const list = async (limit = 10, offset = 0, order = 'created_at', isAsc = false, keyword) => {\n  init(API)\n  return listApi(limit, offset, order, isAsc, keyword)\n}\nexport const detail = async (id) => {\n  init(API)\n  return detailApi(id)\n}\nexport const create = async (data) => {\n  init(API)\n  return createApi(data)\n}\nexport const update = async (id, data) => {\n  init(API)\n  return updateApi(id, data)\n}\nexport const destroy = async (id) => {\n  init(API)\n  return destroyApi(id)\n}\nexport const cancel = async (id) => {\n  const response = await apiClient.put(API.cancel.format(id))\n  if (response) {\n    return response.data\n  }\n}\nexport const getTags = async (id) => {\n  const response = await apiClient.get(API.get_tag.format(id))\n  if (response) {\n    return response.data\n  }\n}\nexport const addTag = async (id, name) => {\n  const response = await apiClient.put(API.add_tag.format(id), { name })\n  if (response) {\n    return response.data\n  }\n}\nexport const removeTag = async (id, tagId) => {\n  const response = await apiClient.delete(API.remove_tag.format(id, tagId))\n  if (response) {\n    return response.data\n  }\n}\nexport const getGroups = async (id) => {\n  const response = await apiClient.get(API.groups.format(id))\n  if (response) {\n    return response.data\n  }\n}\nexport const getGraphs = async (id) => {\n  const response = await apiClient.get(API.graphs.format(id))\n  if (response) {\n    return response.data\n  }\n}\nexport const getGraphMetrics = async (id) => {\n  const response = await apiClient.get(API.graphMetrics.format(id))\n  if (response) {\n    return response.data\n  }\n}\nexport const getCounters = async (id, from = '', end = '') => {\n  const response = await apiClient.get(`${API.counters.format(id)}${from}${end}`)\n  if (response) {\n    return response.data\n  }\n}\nexport const getHistograms = async (id, from = '', end = '') => {\n  const response = await apiClient.get(`${API.histograms.format(id)}${from}${end}`)\n  if (response) {\n    return response.data\n  }\n}\nexport const getGauges = async (id, from = '', end = '') => {\n  const response = await apiClient.get(`${API.gauges.format(id)}${from}${end}`)\n  if (response) {\n    return response.data\n  }\n}\nexport const getMetrics = async (id, from = '', end = '') => {\n  const response = await apiClient.get(`${API.metrics.format(id)}${from}${end}`)\n  if (response) {\n    return response.data\n  }\n}\nexport const getMetricData = async (id = 0, type = METRIC_TYPE.COUNTER, fromTime = null, toTime = null) => {\n  const from = fromTime ? `?from=${fromTime}` : ''\n  const end = toTime ? `&end=${toTime}` : ''\n  switch (type) {\n    case METRIC_TYPE.COUNTER:\n      return getCounters(id, from, end)\n    case METRIC_TYPE.HISTOGRAM:\n      return getHistograms(id, from, end)\n    case METRIC_TYPE.GAUGE:\n      return getGauges(id, from, end)\n    default:\n      return getMetrics(id, from, end)\n  }\n}\n\n/***\n * get metrics data (first fetch)\n * @param metrics\n * @param timeRange\n * @param timestamp\n * @param isRealtime\n * @returns {Promise<unknown[]>}\n */\n\nexport const getOfflineMetricData = async (metrics, timeRange = 3600, timestamp, isRealtime) => {\n  const now = new Date().getTime()\n  const fromTime = Math.round((now - timestamp) / 1000) < timeRange ? timestamp : (now - (timeRange * 1000))\n\n  const metricsData = metrics.map(async m => {\n    let mData\n    if (isRealtime) {\n      mData = await getMetricData(m.id, m.type, fromTime, now)\n    } else {\n      mData = await getMetricData(m.id, m.type)\n    }\n    if (mData.length === 0) {\n      return {\n        ...m,\n        lastTimestamp: timestamp,\n        chartData: {\n          name: m.title,\n          data: []\n        }\n      }\n    }\n    const lastTimestamp = get(maxBy(mData, m => m.time), 'time')\n    return {\n      ...m,\n      lastTimestamp,\n      chartData: {\n        name: m.title,\n        data: m.type === METRIC_TYPE.HISTOGRAM ? mData : getChartData(m.type, mData)\n      }\n    }\n  })\n  return await Promise.all(metricsData)\n    .then(rs => rs)\n    .catch(err => err)\n}\n/***\n * get metrics data interval\n * @param metrics\n * @param oldData\n * @returns {Promise<unknown[]>}\n */\nexport const getMetricDataPolling = async (metrics, oldData = []) => {\n  return await Promise.all(metrics.map(mtr => {\n    const oldMetricData = oldData.find(o => mtr.id === get(o, ['id'], ''))\n    const timestamp = get(oldMetricData, 'lastTimestamp', '')\n    return getMetricData(mtr.id, mtr.type, timestamp)\n      .then(mData => {\n        if (mData.length > 0) {\n          const dataByType = getDataByType(mData, mtr.type)\n          const oldMetricChartData = get(oldMetricData, ['chartData', 'data'], [])\n          const newData = [...oldMetricChartData, ...dataByType]\n          return {\n            ...oldMetricData,\n            lastTimestamp: get(orderBy(mData, ['time'], 'desc'), '[0].time'),\n            chartData: {\n              name: mtr.title,\n              data: newData\n            }\n          }\n        }\n        return oldMetricData\n      })\n  }))\n    .then(rs => rs)\n    .catch(err => err)\n}\n\nexport const logs = async (id, type) => {\n  const response = await apiClient.get(API.log.format(id, type))\n  if (response) {\n    return response.data\n  }\n}\n","import { all, put, call, takeEvery, select } from 'redux-saga/effects'\nimport { notification } from 'antd'\nimport actions from './actions'\nimport { history } from 'index'\nimport {\n  list, detail, create, update, destroy, cancel,\n  getGroups, getGraphs, getGraphMetrics, getCounters,\n  getHistograms, getGauges, getMetrics, getMetricData,\n  getOfflineMetricData, getMetricDataPolling,\n  logs, addTag, removeTag, getTags\n} from 'services/application'\n\nexport function * LIST ({ payload }) {\n  let { keyword, limit, offset, sorter, order, isAsc } = payload\n  if (sorter && sorter.field) {\n    order = sorter.field\n    isAsc = sorter.order === 'ascend'\n  }\n  yield loading(true)\n  const response = yield call(list, limit, offset, order, isAsc, keyword)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: response\n    })\n  }\n  yield loading(false)\n}\nexport function * DETAIL ({ payload }) {\n  const { id } = payload\n  yield loading(true)\n  const response = yield call(detail, id)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        detail: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * CREATE ({ payload }) {\n  const { name, scenario, gomod, gosum } = payload\n  yield loading(true)\n  const response = yield call(create, {\n    name,\n    scenario: window.btoa(unescape(encodeURIComponent(scenario))),\n    gomod: window.btoa(unescape(encodeURIComponent(gomod))),\n    gosum: window.btoa(unescape(encodeURIComponent(gosum)))\n  })\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        detail: response\n      }\n    })\n    notification.success({\n      message: 'Application created',\n      description: 'You have successfully created an application!'\n    })\n    history.push(`/applications/${response.id}`)\n  }\n  // clear clone data\n  yield put({\n    type: 'application/SET_STATE',\n    payload: {\n      clone: undefined\n    }\n  })\n\n  yield loading(false)\n}\nexport function * CLONE ({ payload }) {\n  const { data } = payload\n  yield put({\n    type: 'application/SET_STATE',\n    payload: {\n      clone: data\n    }\n  })\n  history.push('/applications/create')\n}\nexport function * UPDATE ({ payload }) {\n  const { id, data } = payload\n  yield loading(true)\n  const response = yield call(update, id, data)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        detail: response\n      }\n    })\n  }\n  notification.success({\n    message: 'Application updated',\n    description: 'You have successfully updated an application!'\n  })\n  yield loading(false)\n}\nexport function * CANCEL ({ payload }) {\n  const { id, data } = payload\n  const state = yield select()\n  const { list } = state.application\n  yield loading(true)\n  const response = yield call(cancel, id, data)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        list: list.map(x => {\n          if (x.id === response.id) {\n            return response\n          }\n          return x\n        }),\n        detail: response\n      }\n    })\n    notification.success({\n      message: 'Application canceled',\n      description: 'You have successfully canceled an application!'\n    })\n  }\n  yield loading(false)\n}\nexport function * DELETE ({ payload }) {\n  const { id, redirect } = payload\n  const state = yield select()\n  const { list, total } = state.application\n  yield loading(true)\n  const response = yield call(destroy, id)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        list: list.filter(x => x.id !== id),\n        total: total - 1\n      }\n    })\n    if (redirect) {\n      history.push(redirect)\n    }\n  }\n  yield loading(false)\n}\nexport function * GROUPS ({ payload }) {\n  const { id } = payload\n\n  yield loading(true)\n  const response = yield call(getGroups, id)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        groups: response\n      }\n    })\n  }\n  yield loading(false)\n}\n\nexport function * COUNTERS ({ payload }) {\n  const { id, from, end } = payload\n  yield loading(true)\n  const response = yield call(getCounters, id, from, end)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        counters: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * HISTOGRAMS ({ payload }) {\n  const { id, from, end } = payload\n  yield loading(true)\n  const response = yield call(getHistograms, id, from, end)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        histograms: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * GAUGES ({ payload }) {\n  const { id, from, end } = payload\n  yield loading(true)\n  const response = yield call(getGauges, id, from, end)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        gauges: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * METRICS ({ payload }) {\n  const { id, from, end } = payload\n  yield loading(true)\n  const response = yield call(getMetrics, id, from, end)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        metrics: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * METRIC_DATA ({ payload }) {\n  const { id, type, fromTime, toTime } = payload\n  yield loading(true)\n  const response = yield call(getMetricData, id, type, fromTime, toTime)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        metricDatas: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * GRAPHS ({ payload }) {\n  const { id } = payload\n  yield loading(true)\n  const response = yield call(getGraphs, id)\n  if (response) {\n    const graphs = yield response.map(x => {\n      x.groupId = id\n      return x\n    })\n    yield put({\n      type: 'application/SET_GRAPH_STATE',\n      payload: {\n        graphs\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * GRAPH_METRICS ({ payload }) {\n  const { id } = payload\n\n  yield loading(true)\n  const response = yield call(getGraphMetrics, id)\n  if (response) {\n    yield put({\n      type: 'application/SET_GRAPH_METRIC_STATE',\n      payload: {\n        graphId: id,\n        metrics: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * GRAPH_METRIC_DATA ({ payload }) {\n  const { id, metrics, timeRange, timestamp, isRealtime } = payload\n  yield loading(true)\n  const response = yield call(getOfflineMetricData, metrics, timeRange, timestamp, isRealtime)\n  if (response) {\n    yield put({\n      type: 'application/SET_GRAPH_METRIC_DATA',\n      payload: {\n        graphId: id,\n        metrics: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * METRIC_DATA_POLLING ({ payload }) {\n  const { id, metrics, data } = payload\n  yield loading(true)\n  const response = yield call(getMetricDataPolling, metrics, data)\n  if (response) {\n    yield put({\n      type: 'application/SET_GRAPH_METRIC_DATA',\n      payload: {\n        graphId: id,\n        metrics: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * SYSLOG ({ payload }) {\n  const { id } = payload\n  yield loading(true)\n  const response = yield call(logs, id, 'system')\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        logs: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * LOG ({ payload }) {\n  const { id } = payload\n  yield loading(true)\n  const response = yield call(logs, id, 'user')\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        logs: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * TAGS ({ payload }) {\n  const { id } = payload\n  yield loading(true)\n  const response = yield call(getTags, id)\n  if (response) {\n    yield put({\n      type: 'application/SET_STATE',\n      payload: {\n        tags: response\n      }\n    })\n  }\n  yield loading(false)\n}\nexport function * TAG_ADD ({ payload }) {\n  const { id, name } = payload\n  yield loading(true)\n  const response = yield call(addTag, id, name)\n  if (response) {\n    yield put({\n      type: 'application/SET_TAG_STATE',\n      payload: [\n        response\n      ]\n    })\n  }\n  yield loading(false)\n}\nexport function * TAG_REMOVE ({ payload }) {\n  const { id, tagId } = payload\n  yield loading(true)\n  const response = yield call(removeTag, id, tagId)\n  if (response) {\n    yield put({\n      type: 'application/SET_TAG_STATE',\n      payload: [\n        response\n      ]\n    })\n  }\n  notification.success({\n    message: 'Application Tag deleted',\n    description: 'You have successfully delete a tag for this application!'\n  })\n  yield loading(false)\n}\nfunction * loading (isLoading = false) {\n  yield put({\n    type: 'application/SET_STATE',\n    payload: {\n      loading: isLoading\n    }\n  })\n}\nexport default function * rootSaga () {\n  yield all([\n    takeEvery(actions.LIST, LIST),\n    takeEvery(actions.DETAIL, DETAIL),\n    takeEvery(actions.CREATE, CREATE),\n    takeEvery(actions.UPDATE, UPDATE),\n    takeEvery(actions.DELETE, DELETE),\n    takeEvery(actions.LOG, LOG),\n    takeEvery(actions.SYSLOG, SYSLOG),\n    takeEvery(actions.TAGS, TAGS),\n    takeEvery(actions.TAG_ADD, TAG_ADD),\n    takeEvery(actions.TAG_REMOVE, TAG_REMOVE),\n\n    takeEvery(actions.CLONE, CLONE),\n    takeEvery(actions.CANCEL, CANCEL),\n    takeEvery(actions.GROUPS, GROUPS),\n    takeEvery(actions.GRAPHS, GRAPHS),\n    takeEvery(actions.GRAPH_METRICS, GRAPH_METRICS),\n    // takeEvery(actions.COUNTERS, COUNTERS),\n    takeEvery(actions.HISTOGRAMS, HISTOGRAMS),\n    takeEvery(actions.GAUGES, GAUGES),\n    takeEvery(actions.METRICS, METRICS),\n    takeEvery(actions.METRIC_DATA, METRIC_DATA),\n    takeEvery(actions.GRAPH_METRIC_DATA, GRAPH_METRIC_DATA),\n    takeEvery(actions.METRIC_DATA_POLLING, METRIC_DATA_POLLING)\n  ])\n}\n","import { all } from 'redux-saga/effects'\nimport user from './user/sagas'\nimport menu from './menu/sagas'\nimport settings from './settings/sagas'\nimport application from './application/sagas'\n\nexport default function * rootSaga () {\n  yield all([user(), menu(), settings(), application()])\n}\n","import React from 'react'\nimport { ConfigProvider } from 'antd'\nimport { IntlProvider } from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport english from './locales/en-US'\nimport french from './locales/fr-FR'\nimport russian from './locales/ru-RU'\nimport chinese from './locales/zh-CN'\n\nconst locales = {\n  'en-US': english,\n  'fr-FR': french,\n  'ru-RU': russian,\n  'zh-CN': chinese\n}\n\nconst mapStateToProps = ({ settings }) => ({ settings })\n\nconst Localization = ({ children, settings: { locale } }) => {\n  const currentLocale = locales[locale]\n  return (\n    <ConfigProvider locale={currentLocale.localeAntd}>\n      <IntlProvider locale={currentLocale.locale} messages={currentLocale.messages}>\n        {children}\n      </IntlProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default connect(mapStateToProps)(Localization)\n","import localeAntd from 'antd/es/locale/en_US'\n\nconst messages = {\n  'topBar.issuesHistory': 'Issues History',\n  'topBar.projectManagement': 'Project Management',\n  'topBar.typeToSearch': 'Search...',\n  'topBar.findPages': 'Find pages...',\n  'topBar.actions': 'Actions',\n  'topBar.status': 'Status',\n  'topBar.profileMenu.hello': 'Hello',\n  'topBar.profileMenu.billingPlan': 'Billing Plan',\n  'topBar.profileMenu.role': 'Role',\n  'topBar.profileMenu.email': 'Email',\n  'topBar.profileMenu.phone': 'Phone',\n  'topBar.profileMenu.editProfile': 'Edit Profile',\n  'topBar.profileMenu.logout': 'Logout',\n  administrator: 'Administrator'\n}\n\nexport default {\n  locale: 'en-US',\n  localeAntd,\n  messages\n}\n","import localeAntd from 'antd/es/locale/fr_FR'\n\nconst messages = {\n  'topBar.issuesHistory': 'Histoire des problèmes',\n  'topBar.projectManagement': 'Gestion de projet',\n  'topBar.typeToSearch': 'Chercher...',\n  'topBar.findPages': 'Trouver des pages...',\n  'topBar.actions': 'Actes',\n  'topBar.status': 'Statut',\n  'topBar.profileMenu.hello': 'Bonjour',\n  'topBar.profileMenu.billingPlan': 'Plan de facturation',\n  'topBar.profileMenu.role': 'Rôle',\n  'topBar.profileMenu.email': 'Email',\n  'topBar.profileMenu.phone': 'Téléphone',\n  'topBar.profileMenu.editProfile': 'Editer le profil',\n  'topBar.profileMenu.logout': 'Connectez - Out'\n}\n\nexport default {\n  locale: 'fr-FR',\n  localeAntd,\n  messages\n}\n","import localeAntd from 'antd/es/locale/ru_RU'\n\nconst messages = {\n  'topBar.issuesHistory': 'История заданий',\n  'topBar.projectManagement': 'Управление проектом',\n  'topBar.typeToSearch': 'Поиск...',\n  'topBar.findPages': 'Поиск страниц...',\n  'topBar.actions': 'Действия',\n  'topBar.status': 'Статус',\n  'topBar.profileMenu.hello': 'Привет',\n  'topBar.profileMenu.billingPlan': 'Тарифный план',\n  'topBar.profileMenu.role': 'Роль',\n  'topBar.profileMenu.email': 'Емайл',\n  'topBar.profileMenu.phone': 'Телефон',\n  'topBar.profileMenu.editProfile': 'Редактировать профиль',\n  'topBar.profileMenu.logout': 'Выйти'\n}\n\nexport default {\n  locale: 'ru-RU',\n  localeAntd,\n  messages\n}\n","import localeAntd from 'antd/es/locale/zh_CN'\n\nconst messages = {\n  'topBar.issuesHistory': '发布历史',\n  'topBar.projectManagement': '项目管理',\n  'topBar.typeToSearch': '搜索...',\n  'topBar.findPages': '查找页面...',\n  'topBar.actions': '动作',\n  'topBar.status': '状态',\n  'topBar.profileMenu.hello': '你好',\n  'topBar.profileMenu.billingPlan': '结算计划',\n  'topBar.profileMenu.role': '角色',\n  'topBar.profileMenu.email': '电子邮件',\n  'topBar.profileMenu.phone': '电话',\n  'topBar.profileMenu.editProfile': '编辑个人资料',\n  'topBar.profileMenu.logout': '登出'\n}\n\nexport default {\n  locale: 'zh-CN',\n  localeAntd,\n  messages\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nconst PublicLayout = ({ children }) => {\n  return children\n}\n\nexport default withRouter(PublicLayout)\n","import React from 'react'\nimport style from './style.module.scss'\n\nconst Footer = () => {\n  return (\n    <div className={style.footer}>\n      <div className={style.footerInner}>\n        {/* <a\n          href=\"https://google.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={style.logo}\n        >\n          Gobench\n          <span />\n        </a>\n        <br /> */}\n        <p className='mb-0'>\n          <img width='24px' src='/resources/images/GitHub-Mark-32px.png' />\n          <a href='https://github.com/gobench-io/gobench' target='_blank' rel='noopener noreferrer'>\n          &nbsp;Documentation\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Layout } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport classNames from 'classnames'\nimport Footer from 'components/cleanui/layout/Footer'\nimport style from './style.module.scss'\n\nconst mapStateToProps = ({ settings }) => ({\n  logo: settings.logo,\n  isGrayTopbar: settings.isGrayTopbar,\n  isCardShadow: settings.isCardShadow,\n  isSquaredBorders: settings.isSquaredBorders,\n  isBorderless: settings.isBorderless,\n  authPagesColor: settings.authPagesColor\n})\n\nconst AuthLayout = ({\n  children,\n  logo,\n  isGrayTopbar,\n  isCardShadow,\n  isSquaredBorders,\n  isBorderless,\n  authPagesColor\n}) => {\n  return (\n    <Layout>\n      <Layout.Content>\n        {/* <Sidebar />\n        <SupportChat /> */}\n        <div\n          className={classNames(`${style.container}`, {\n            cui__layout__squaredBorders: isSquaredBorders,\n            cui__layout__cardsShadow: isCardShadow,\n            cui__layout__borderless: isBorderless,\n            [style.white]: authPagesColor === 'white',\n            [style.gray]: authPagesColor === 'gray'\n          })}\n          style={{\n            backgroundImage:\n              authPagesColor === 'image' ? 'url(resources/images/content/photos/7.jpg)' : ''\n          }}\n        >\n          <div\n            className={classNames(`${style.topbar}`, {\n              [style.topbarGray]: isGrayTopbar\n            })}\n          >\n            <div className={style.logoContainer}>\n              <div className={style.logo}>\n                <img src='resources/images/logo.svg' className='mr-2' alt='Gobench' />\n                <div className={style.name}>{logo}</div>\n              </div>\n            </div>\n          </div>\n          <div className={style.containerInner}>{children}</div>\n        </div>\n      </Layout.Content>\n      <Layout.Footer>\n        <Footer />\n      </Layout.Footer>\n    </Layout>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(AuthLayout))\n","import React, { useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { UserOutlined } from '@ant-design/icons'\nimport { Menu, Dropdown, Avatar } from 'antd'\nimport styles from './style.module.scss'\n\nconst mapStateToProps = ({ user }) => ({ user })\n\nconst ProfileMenu = ({ dispatch }) => {\n  const [count, setCount] = useState(7)\n\n  const logout = e => {\n    e.preventDefault()\n    dispatch({\n      type: 'user/LOGOUT'\n    })\n  }\n\n  const addCount = () => {\n    setCount(count + 1)\n  }\n\n  const menu = (\n    <Menu selectable={false}>\n      <Menu.Item>\n        <strong>\n          <FormattedMessage id='administrator' />\n        </strong>\n        {/* <div>\n          <strong className=\"mr-1\">\n            <FormattedMessage id=\"topBar.profileMenu.billingPlan\" />:{' '}\n          </strong>\n          Professional\n        </div> */}\n        {/* <div>\n          <strong>\n            <FormattedMessage id=\"topBar.profileMenu.role\" />:{' '}\n          </strong>\n          {user.role || '—'}\n        </div> */}\n      </Menu.Item>\n      <Menu.Divider />\n      {/* <Menu.Item>\n        <div>\n          <strong>\n            <FormattedMessage id=\"topBar.profileMenu.email\" />:{' '}\n          </strong>\n          {user.email || '—'}\n          <br />\n          <strong>\n            <FormattedMessage id=\"topBar.profileMenu.phone\" />:{' '}\n          </strong>\n          {user.phone || '—'}\n        </div>\n      </Menu.Item> */}\n      {/* <Menu.Divider /> */}\n      {/* <Menu.Item>\n        <a href=\"#\" onClick={e => e.preventDefault()}>\n          <i className=\"fe fe-user mr-2\" />\n          <FormattedMessage id=\"topBar.profileMenu.editProfile\" />\n        </a>\n      </Menu.Item>\n      <Menu.Divider /> */}\n      <Menu.Item>\n        <a onClick={logout}>\n          <i className='fe fe-log-out mr-2' />\n          <FormattedMessage id='topBar.profileMenu.logout' />\n        </a>\n      </Menu.Item>\n    </Menu>\n  )\n  return (\n    <Dropdown overlay={menu} trigger={['click']} onVisibleChange={addCount}>\n      <div className={styles.dropdown}>\n        {/* <Badge count={count}> */}\n        <Avatar className={styles.avatar} shape='square' size='large' icon={<UserOutlined />} />\n        {/* </Badge> */}\n      </div>\n    </Dropdown>\n  )\n}\n\nexport default connect(mapStateToProps)(ProfileMenu)\n","import React from 'react'\n// import FavPages from './FavPages'\n// import Search from './Search'\n// import IssuesHistory from './IssuesHistory'\n// import ProjectManagement from './ProjectManagement'\n// import LanguageSwitcher from './LanguageSwitcher'\n// import Actions from './Actions'\nimport UserMenu from './UserMenu'\nimport style from './style.module.scss'\nimport { Link } from 'react-router-dom'\n\nconst TopBar = () => {\n  return (\n    <div className={style.topbar}>\n      {/* <div className=\"mr-4\">\n        <FavPages />\n      </div> */}\n      <div className='logo'>\n        <Link to='/'>\n          <img src='/resources/images/logo-white.png' width='200px' />\n        </Link>\n      </div>\n      <div className='mr-auto'>\n        {/* <Search /> */}\n      </div>\n      <div className='text-right' style={{ marginRight: 10, opacity: 0.7 }}>\n        <img width='24px' src='/resources/images/GitHub-Mark-32px.png' />\n        <a href='https://github.com/gobench-io/gobench' target='_blank' rel='noopener noreferrer'>\n          &nbsp;Documentation\n        </a>\n      </div>\n      {/* <div className=\"mr-4 d-none d-md-block\">\n        <IssuesHistory />\n      </div>\n      <div className=\"mb-0 mr-auto d-xl-block d-none\">\n        <ProjectManagement />\n      </div>\n      <div className=\"mr-4 d-none d-sm-block\">\n        <LanguageSwitcher />\n      </div>\n      <div className=\"mr-4 d-none d-sm-block\">\n        <Actions />\n      </div> */}\n      <div className='text-right'>\n        <UserMenu />\n      </div>\n    </div>\n  )\n}\n\nexport default TopBar\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reduce } from 'lodash'\nimport styles from './style.module.scss'\n\nconst mapStateToProps = ({ menu }) => ({\n  menuData: menu.menuData,\n})\n\nconst Breadcrumbs = props => {\n  const [breadcrumbs, setBreadcrumbs] = useState([])\n  const {\n    location: { pathname },\n    menuData = [],\n  } = props\n  useEffect(() => {\n    setBreadcrumbs(() => getBreadcrumbs())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname, menuData])\n\n  const getPath = (data, url, parents = []) => {\n    const items = reduce(\n      data,\n      (result, entry) => {\n        if (result.length) {\n          return result\n        }\n        if (entry.url === url) {\n          return [entry].concat(parents)\n        }\n        if (entry.children) {\n          const nested = getPath(entry.children, url, [entry].concat(parents))\n          return (result || []).concat(nested.filter(e => !!e))\n        }\n        return result\n      },\n      [],\n    )\n    return items.length > 0 ? items : [false]\n  }\n\n  const getBreadcrumbs = () => {\n    const [activeMenuItem, ...path] = getPath(menuData, pathname)\n\n    if (!activeMenuItem) {\n      return null\n    }\n    if (activeMenuItem && path.length) {\n      return path.reverse().map((item, index) => {\n        if (index === path.length - 1) {\n          return (\n            <span key={item.key}>\n              <span className={styles.arrow} />\n              <span>{item.title}</span>\n              <span className={styles.arrow} />\n              <strong className={styles.current}>{activeMenuItem.title}</strong>\n            </span>\n          )\n        }\n        return (\n          <span key={item.key}>\n            <span className={styles.arrow} />\n            <span>{item.title}</span>\n          </span>\n        )\n      })\n    }\n    return (\n      <span>\n        <span className={styles.arrow} />\n        <strong className={styles.current}>{activeMenuItem.title}</strong>\n      </span>\n    )\n  }\n\n  return (\n    breadcrumbs &&\n    (breadcrumbs.length ? (\n      <div className={styles.breadcrumbs}>\n        <div className={styles.path}>\n          <Link to=\"/dashboard/alpha\">Home</Link>\n          {breadcrumbs}\n        </div>\n      </div>\n    ) : null)\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumbs))\n","import React from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport NProgress from 'nprogress'\nimport { Helmet } from 'react-helmet'\n// import Loader from 'components/cleanui/layout/Loader'\nimport PublicLayout from './Public'\nimport AuthLayout from './Auth'\nimport MainLayout from './Main'\n\nconst Layouts = {\n  public: PublicLayout,\n  auth: AuthLayout,\n  main: MainLayout\n}\n\nconst mapStateToProps = ({ user }) => ({ user })\nlet previousPath = ''\n\nconst Layout = ({ user, children, location: { pathname, search } }) => {\n  // NProgress & ScrollTop Management\n  const currentPath = pathname + search\n  if (currentPath !== previousPath) {\n    window.scrollTo(0, 0)\n    NProgress.start()\n  }\n  setTimeout(() => {\n    NProgress.done()\n    previousPath = currentPath\n  }, 300)\n\n  // Layout Rendering\n  const getLayout = () => {\n    if (pathname === '/') {\n      return 'public'\n    }\n    if (/^\\/auth(?=\\/|$)/i.test(pathname)) {\n      return 'auth'\n    }\n    return 'main'\n  }\n\n  const Container = Layouts[getLayout()]\n  const isUserAuthorized = user.authorized\n  const isUserLoading = user.loading\n  const isAuthLayout = getLayout() === 'auth'\n\n  const BootstrappedLayout = () => {\n    // show loader when user in check authorization process, not authorized yet and not on login pages\n    if (isUserLoading && !isUserAuthorized && !isAuthLayout) {\n      return null\n    }\n    // redirect to login page if current is not login page and user not authorized\n    if (!isAuthLayout && !isUserAuthorized) {\n      return <Redirect to='/auth/login' />\n    }\n    // in other case render previously set layout\n    return <Container>{children}</Container>\n  }\n\n  return (\n    <>\n      <Helmet titleTemplate='Gobench | %s' title='' />\n      {BootstrappedLayout()}\n    </>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(Layout))\n","import React from 'react'\nimport { Layout } from 'antd'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport classNames from 'classnames'\nimport TopBar from 'components/cleanui/layout/TopBar'\nimport Breadcrumbs from 'components/cleanui/layout/Breadcrumbs'\n// import Menu from 'components/cleanui/layout/Menu'\nimport Footer from 'components/cleanui/layout/Footer'\n// import Sidebar from 'components/cleanui/layout/Sidebar'\n// import SupportChat from 'components/cleanui/layout/SupportChat'\n\nconst mapStateToProps = ({ settings }) => ({\n  isContentMaxWidth: settings.isContentMaxWidth,\n  isAppMaxWidth: settings.isAppMaxWidth,\n  isGrayBackground: settings.isGrayBackground,\n  isSquaredBorders: settings.isSquaredBorders,\n  isCardShadow: settings.isCardShadow,\n  isBorderless: settings.isBorderless,\n  isTopbarFixed: settings.isTopbarFixed,\n  isGrayTopbar: settings.isGrayTopbar\n})\n\nconst MainLayout = ({\n  children,\n  isContentMaxWidth,\n  isAppMaxWidth,\n  isGrayBackground,\n  isSquaredBorders,\n  isCardShadow,\n  isBorderless,\n  isTopbarFixed,\n  isGrayTopbar\n}) => {\n  return (\n    <div className={classNames({ cui__layout__grayBackground: isGrayBackground })}>\n      <Layout\n        className={classNames({\n          cui__layout__contentMaxWidth: isContentMaxWidth,\n          cui__layout__appMaxWidth: isAppMaxWidth,\n          cui__layout__grayBackground: isGrayBackground,\n          cui__layout__squaredBorders: isSquaredBorders,\n          cui__layout__cardsShadow: isCardShadow,\n          cui__layout__borderless: isBorderless\n        })}\n      >\n        {/* <Sidebar /> */}\n        {/* <SupportChat /> */}\n        {/* <Menu /> */}\n        <Layout>\n          <Layout.Header\n            className={classNames('cui__layout__header', {\n              cui__layout__fixedHeader: isTopbarFixed,\n              cui__layout__headerGray: isGrayTopbar\n            })}\n          >\n            <TopBar />\n          </Layout.Header>\n          <Breadcrumbs />\n          <Layout.Content style={{ height: '100%', position: 'relative' }}>\n            <div className='cui__utils__content'>{children}</div>\n          </Layout.Content>\n          <Layout.Footer>\n            <Footer />\n          </Layout.Footer>\n        </Layout>\n      </Layout>\n    </div>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(MainLayout))\n","import React, { lazy, Suspense } from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\nimport { connect } from 'react-redux'\n\nimport Layout from 'layouts'\n\nconst routes = [\n  // Dashboards\n  {\n    path: '/applications',\n    Component: lazy(() => import('pages/application')),\n    exact: true\n  },\n  {\n    path: '/applications/create',\n    Component: lazy(() => import('pages/application/create')),\n    exact: true\n  },\n  {\n    path: '/applications/:id',\n    Component: lazy(() => import('pages/application/detail')),\n    exact: true\n  },\n  // Auth Pages\n  {\n    path: '/auth/login',\n    Component: lazy(() => import('pages/auth/login')),\n    exact: true\n  },\n  {\n    path: '/auth/forgot-password',\n    Component: lazy(() => import('pages/auth/forgot-password')),\n    exact: true\n  },\n  {\n    path: '/auth/register',\n    Component: lazy(() => import('pages/auth/register')),\n    exact: true\n  },\n  {\n    path: '/auth/lockscreen',\n    Component: lazy(() => import('pages/auth/lockscreen')),\n    exact: true\n  },\n  {\n    path: '/auth/404',\n    Component: lazy(() => import('pages/auth/404')),\n    exact: true\n  },\n  {\n    path: '/auth/500',\n    Component: lazy(() => import('pages/auth/500')),\n    exact: true\n  }\n]\n\nconst mapStateToProps = ({ settings }) => ({\n  routerAnimation: settings.routerAnimation\n})\n\nconst Router = ({ history, routerAnimation }) => {\n  return (\n    <ConnectedRouter history={history}>\n      <Layout>\n        <Route\n          render={state => {\n            const { location } = state\n            return (\n              <SwitchTransition>\n                <CSSTransition\n                  key={location.pathname}\n                  appear\n                  classNames={routerAnimation}\n                  timeout={routerAnimation === 'none' ? 0 : 300}\n                >\n                  <Switch location={location}>\n                    <Route exact path='/' render={() => <Redirect to='/applications' />} />\n                    {routes.map(({ path, Component, exact }) => (\n                      <Route\n                        path={path}\n                        key={path}\n                        exact={exact}\n                        render={() => {\n                          return (\n                            <div className={routerAnimation}>\n                              <Suspense fallback={null}>\n                                <Component />\n                              </Suspense>\n                            </div>\n                          )\n                        }}\n                      />\n                    ))}\n                    <Redirect to='/auth/404' />\n                  </Switch>\n                </CSSTransition>\n              </SwitchTransition>\n            )\n          }}\n        />\n      </Layout>\n    </ConnectedRouter>\n  )\n}\n\nexport default connect(mapStateToProps)(Router)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import MockAdapter from 'axios-mock-adapter'\nimport apiClient from '../index'\n\nconst mock = new MockAdapter(apiClient, { delayResponse: 500 })\n\nexport default mock\n","import jwt from 'jsonwebtoken'\nimport mock from '../mock'\n\nconst users = [\n  {\n    id: 1,\n    email: 'admin',\n    password: '12345612',\n    name: 'Tom Jones',\n    avatar: '',\n    role: 'admin'\n  }\n]\n\nconst jwtConfig = {\n  secret: 'RM8EPpgXwovR9fp6ryDIoGHAB6iHsc0fb',\n  expiresIn: 1 * 24 * 60 * 60 * 1000\n}\n\nmock.onPost('/api/auth/login').reply(request => {\n  const { email, password } = JSON.parse(request.data)\n  const user = users.find(item => item.email === email && item.password === password)\n  const error = user ? 'Something went wrong.' : 'Login failed, please try again'\n\n  if (user) {\n    const userData = Object.assign({}, user)\n    delete userData.password\n    userData.accessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, {\n      expiresIn: jwtConfig.expiresIn\n    }) // generate jwt token\n\n    return [200, userData]\n  }\n\n  return [401, error]\n})\n\nmock.onPost('/api/auth/register').reply(request => {\n  const { email, password, name } = JSON.parse(request.data)\n  const isAlreadyRegistered = users.find(user => user.email === email)\n\n  if (!isAlreadyRegistered) {\n    const user = {\n      id: users.length + 1,\n      email,\n      password,\n      name,\n      avatar: '',\n      role: 'admin'\n    }\n    users.push(user)\n\n    const userData = Object.assign({}, user)\n    delete userData.password\n    userData.accessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, {\n      expiresIn: jwtConfig.expiresIn\n    })\n\n    return [200, userData]\n  }\n\n  return [401, 'This email is already in use.']\n})\n\nmock.onGet('/api/auth/account').reply(request => {\n  const { AccessToken } = request.headers\n  if (AccessToken) {\n    const { id } = jwt.verify(AccessToken, jwtConfig.secret)\n    const userData = Object.assign(\n      {},\n      users.find(item => item.id === id)\n    )\n    delete userData.password\n    userData.accessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, {\n      expiresIn: jwtConfig.expiresIn\n    }) // refresh jwt token\n\n    return [200, userData]\n  }\n\n  return [401]\n})\n\nmock.onGet('/api/auth/logout').reply(() => {\n  return [200]\n})\n","import mock from './mock'\nimport './auth'\n\nmock.onAny().passThrough()\n","import 'antd/lib/style/index.less' // antd core styles\nimport './components/kit/vendors/antd/themes/default.less' // default theme antd components\nimport './components/kit/vendors/antd/themes/dark.less' // dark theme antd components\nimport './global.scss' // app & third-party component styles\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createHashHistory } from 'history'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\n// import { logger } from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport reducers from './redux/reducers'\nimport sagas from './redux/sagas'\nimport Localization from './localization'\nimport Router from './router'\nimport * as serviceWorker from './serviceWorker'\nimport './polifill'\n\n// mocking api\nimport 'services/axios/fakeApi'\n\n// middlewared\nconst history = createHashHistory()\nconst sagaMiddleware = createSagaMiddleware()\nconst routeMiddleware = routerMiddleware(history)\nconst middlewares = [sagaMiddleware, routeMiddleware]\nif (process.env.NODE_ENV === 'development') {\n  // middlewares.push(logger)\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducers(history), composeEnhancers(applyMiddleware(...middlewares)))\nsagaMiddleware.run(sagas)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Localization>\n      <Router history={history} />\n    </Localization>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\nexport { store, history }\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport user from './user/reducers'\nimport menu from './menu/reducers'\nimport settings from './settings/reducers'\nimport application from './application/reducers'\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    user,\n    menu,\n    settings,\n    application\n  })\n","export const values = {\n  counter: 'count',\n  gauge: 'value'\n}\nexport const METRIC_TYPE = {\n  HISTOGRAM: 'histogram',\n  COUNTER: 'counter',\n  GAUGE: 'gauge'\n}\n\nexport const INTERVAL = 10000 // realtime data inteval in miliseconds\nexport const DEFAULT_VALUE = null // default value for empty data\n\nexport const TIME_RANGE = {\n  '5m': 5 * 60,\n  '15m': 15 * 60,\n  '30m': 30 * 60,\n  '1h': 60 * 60,\n  '12h': 12 * 60 * 60,\n  '24h': 24 * 60 * 60\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3AZ5b\",\"white\":\"style_white__1I83b\",\"gray\":\"style_gray__1OXkW\",\"containerInner\":\"style_containerInner__2JKfK\",\"topbar\":\"style_topbar__IfbhY\",\"topbarGray\":\"style_topbarGray__18gnv\",\"logoContainer\":\"style_logoContainer__t3lZA\",\"logo\":\"style_logo__1Zuz2\",\"name\":\"style_name__wsRv0\",\"descr\":\"style_descr__3SLmA\",\"footerNav\":\"style_footerNav__11QdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"style_breadcrumbs__1GI9-\",\"current\":\"style_current__2oTdN\",\"arrow\":\"style_arrow__2FG0q\"};"],"sourceRoot":""}